# Supabase
NEXT_PUBLIC_SUPABASE_URL=your_supabase_project_url
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key

# Twilio (Optional - for SMS features)
TWILIO_ACCOUNT_SID=your_twilio_account_sid
TWILIO_AUTH_TOKEN=your_twilio_auth_token
TWILIO_PHONE_NUMBER=+44xxxxxxxxxx

# Application
NEXT_PUBLIC_APP_URL=http://localhost:3000
NEXT_PUBLIC_CONTACT_PHONE_NUMBER=+44xxxxxxxxxx

# Cron Jobs
CRON_SECRET_KEY=your_secure_random_string

# Sentry (Optional - for error tracking)
NEXT_PUBLIC_SENTRY_DSN=your_sentry_dsn
SENTRY_ORG=your_sentry_org
SENTRY_PROJECT=your_sentry_project
SENTRY_AUTH_TOKEN=your_sentry_auth_token
SENTRY_ENABLE_DEV=false

# Testing Only - NEVER set to true in production
SKIP_TWILIO_SIGNATURE_VALIDATION=false

# Rate Limiting (Optional - uses Upstash Redis)
UPSTASH_REDIS_REST_URL=your_upstash_redis_rest_url
UPSTASH_REDIS_REST_TOKEN=your_upstash_redis_rest_token

# Google Calendar Integration (Optional - for private bookings)
# Service Account method (recommended for server-to-server integration)
# IMPORTANT: The service account key must be properly formatted:
# 1. Download the JSON key file from Google Cloud Console
# 2. Ensure all newlines in the private key are escaped as \n
# 3. The entire JSON must be on a single line
# 4. Use the formatServiceAccountForEnv() helper in src/lib/google-calendar.ts if needed
GOOGLE_SERVICE_ACCOUNT_KEY='{"type":"service_account","project_id":"your-project","private_key_id":"...","private_key":"-----BEGIN PRIVATE KEY-----\\nMIIE...your-key-here...\\n-----END PRIVATE KEY-----\\n","client_email":"your-service-account@your-project.iam.gserviceaccount.com","client_id":"...","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url":"...","universe_domain":"googleapis.com"}'
GOOGLE_CALENDAR_ID=your_calendar_id@group.calendar.google.com

# Alternative OAuth2 method (if not using service account)
# Use this method if you prefer OAuth2 flow with user consent
GOOGLE_CLIENT_ID=your_google_client_id
GOOGLE_CLIENT_SECRET=your_google_client_secret
GOOGLE_REDIRECT_URL=http://localhost:3000/api/auth/google/callback
GOOGLE_REFRESH_TOKEN=your_google_refresh_token